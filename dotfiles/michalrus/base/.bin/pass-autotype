#!/bin/sh

set -o noclobber -o errexit -o nounset

pwstore="$HOME/.password-store/"

for ex in xdotool pass oathtool dmenu ; do
  command -v "$ex" >/dev/null || { echo >&1  "$ex: command not found" ; exit 1 ; }
done

lockfile="$HOME/.pass-autotype.lock"
( set -o noclobber ; echo "$$" >"$lockfile" ) 2>/dev/null || { echo >&1 "$lockfile: already exists; another instance of $0 is running" ; exit 1 ; }
trap 'e=$? ; rm -f "$lockfile" ; test $e -eq 77 && exit 0 || exit $e' INT TERM EXIT

window="$(xdotool getactivewindow)"

x_type()  { xdotool type --window "$window" "$1" ; }
x_press() { xdotool key  --window "$window" "$1" ; }

choose_vault() {
  window_title="$(xdotool getwindowname "$window") - $(xprop -id "$window" WM_CLASS | cut -d= -f2-)"
  cd "$pwstore"
  {
    find . -name '*.autotype' -print0 | xargs -r0 grep -H '' |\
      sed 's/.autotype:/ /' | cut -c '3-' |\
      awk -v "wt=$window_title" 'index(wt, $2) != 0' | cut -d' ' -f1,3- |\
      sort --unique
    echo "<UUID> Password"
    echo "<random> Password"
  } | dmenu -l 4 -i -p 'Vault:'
}

run_choice() {
  pwname="$1"
  shift

  program="$*"
  [ -n "${1:-}" ] || program="Username <TAB> Password <RET>"

  if   [ "$pwname" = "<random>" ] ; then contents="$(head -c 30 /dev/urandom | base32 | tr '[:upper:]' '[:lower:]')"
  elif [ "$pwname" = "<UUID>"   ] ; then contents="$(uuidgen -r)"
  else                                   contents="$(pass show "$pwname")"
  fi

  get_key(){
    echo "$contents" | grep -Ei "^$1:" | head -n 1 | sed -Ee 's/^[^:]*:\s*(.*)$/\1/'
  }
  full_pw="$(echo "$contents" | head -n 1)"

  for cmd in $program ; do
    case "$cmd" in
      'Password') x_type  "$full_pw" ;;
      '<TAB>')    x_press "Tab" ;;
      '<LEFT>')   x_press "Left" ;;
      '<RET>')    x_press "Return" ;;
      '<SLEEP>')  sleep 0.1 ;;
      'OTP')
        key="$(get_key "$cmd")"
        if [ -n "$key" ]
        then x_type "$(oathtool --totp -b "$key")"
        else x_type "OTP not configured"
        fi
        ;;
      'MaskedPassword')
        length="$(printf '%s' "$full_pw" | wc -c)"
        selected="$(printf '' | dmenu -l 1 -i -p "Which characters [1–$length]? Space-separated:")"
        for num in $selected ; do
          x_type "$(echo "$full_pw" | cut -c "$num")"
          sleep 0.1
        done
        ;;
      *)
        val="$(get_key "$cmd")"
        [ -n "$val" ] || val="unknown field: ‘$cmd’"
        x_type "$val"
        ;;
    esac
  done
}

choice="$(choose_vault)"
[ -n "$choice" ] || { echo >&1 'no password chosen' ; exit 1; }
run_choice $choice
